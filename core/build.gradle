apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka-android'

android {
    resourcePrefix "core"
    compileSdkVersion config.compileSdk
    defaultConfig {
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode 6
        versionName "1.2.0-alpha"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'proguard-rules.pro' // Rules appended to the integrating app
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kapt {
        useBuildCache = true
        javacOptions {
            // Increase the max count of errors from annotation processors.
            // Default is 100.
            option("-Xmaxerrs", 500)
        }
    }
    dokka {
        outputFormat = 'html'
        outputDirectory = "$rootDir/docs/build/docs/orchid/dokka/coredocs"
        skipDeprecated = false // include deprecated members
        reportUndocumented = true // Emit warnings about not documented members.
    }
}

dependencies {
    // androidx
    api "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    api "androidx.recyclerview:recyclerview:$versions.recyclerView"
    api "androidx.cardview:cardview:$versions.cardView"

    // dagger
    api "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    api "com.google.dagger:dagger-android:$versions.dagger"
    api "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // rx-reactive
    api "io.reactivex.rxjava2:rxjava:$versions.rxJava"
    api "io.reactivex.rxjava2:rxandroid:$versions.rxAndroid"
    api "com.github.tbruyelle:rxpermissions:$versions.rxPermission"

    // retrofit
    api "com.squareup.retrofit2:retrofit:$versions.retrofit"
    api "com.squareup.retrofit2:converter-gson:$versions.retrofit"

    // google
    api "com.google.android.gms:play-services-analytics:$versions.googleAnalytics"
    api "com.google.android.material:material:$versions.material"

    // lifecycle, ViewModel and LiveData
    api "androidx.lifecycle:lifecycle-extensions:$versions.archLifecycle"
    api "androidx.lifecycle:lifecycle-reactivestreams-ktx:$versions.archLifecycle" // reactive stream support for live data

    // test
    testImplementation "junit:junit:$versions.junit"
    androidTestImplementation "androidx.test:runner:$versions.runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"

    // config
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
